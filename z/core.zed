\documentclass{article}
\usepackage{czt}

\begin{document}

This specification describes a tally system for first-past-the-post (FPTP)
elections.

In an FPTP election, citizens are registered as voters and candidates. Every
candidate is a voter, but not every voter is a candidate.

This an anonymous teller, which means that every voter is issued a token, and
a voter votes for a token among the set of candidate tokens.

It is outside the scope of this specification to ensure the anonymity of
tokens. It is also outside the scope of this specification to ensure that all
voters are handed out a token, and no duplicate ballots occur.

\begin{zed}
[TOKEN]
\end{zed}

\begin{axdef}
  voters : \power TOKEN \\
  candidates : \power TOKEN
\where
  candidates \subseteq voters
\end{axdef}

\begin{axdef}
  ballot : voters \fun candidates
\end{axdef}

\input{reduce.zed}

\input{take1.zed}

\begin{gendef}[S,T]
  reduce' : (S \cross T \fun S) \cross S \cross \power T \fun S
\where
  \forall f : S \cross T \fun S @ \forall b : S @ \forall as, s : \power T @
    \forall a : T @ \\
  \ \ (a,s) = take1(as) \implies \\
  \ \ reduce'(f, b, as) = \IF \# as = 0 \THEN b \ELSE reduce'(f,f(b,a),s)
\end{gendef}


\begin{axdef}
  sum : \seq \nat \fun \nat
\where
  \forall plus : \nat \cross \nat \fun \nat @ \forall x, y : \nat @
    \forall as : \seq \nat @ \\
  \ \ plus(x,y) = x + y \implies sum(as) = reduce(plus,0,as)
\end{axdef}

\begin{schema}{Teller}
  tally : candidates \fun \nat
\where
  \forall c : candidates @ \forall v : voters @ \forall i : \nat @ \\
  \ \ \forall votes : candidates \fun \seq \nat @ \\
  \ \ votes(c)(i) = \IF ballot(v) = c \THEN 1 \ELSE 0 \implies \\
  \ \ tally(c) = sum(votes(c))
\end{schema}

\end{document}
